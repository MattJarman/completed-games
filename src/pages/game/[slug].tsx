import {
  CalendarIcon,
  ChartPieIcon,
  ClockIcon,
  CogIcon
} from '@heroicons/react/solid'
import type { GetStaticPaths, GetStaticProps, NextPage } from 'next'
import Head from 'next/head'
import RatingCircle from 'src/components/atoms/ratingCircle'
import StatTable, { StatRow } from 'src/components/atoms/statTable'
import { Game, getAllGamesWithSlug, getGameBySlug } from 'src/lib/contentful'

type GamePageProps = {
  game: Game
}

const GamePage: NextPage<GamePageProps> = ({ game }) => {
  const rows: StatRow[] = [
    {
      icon: <CalendarIcon className="w-4 h-4 md:w-5 md:h-5" />,
      name: 'Completed',
      value: new Date(game.completedAt).toDateString()
    },
    {
      icon: <ClockIcon className="w-4 h-4 md:w-5 md:h-5" />,
      name: 'Playtime',
      value: `${game.playtime ?? 0} hrs`
    },
    {
      icon: <CogIcon className="w-4 h-4 md:w-5 md:h-5" />,
      name: 'Difficulty',
      value: game.difficulty ?? '?'
    },
    {
      icon: <ChartPieIcon className="w-4 h-4 md:w-5 md:h-5" />,
      name: 'Completion Stats',
      value: game.completionStats ?? '?'
    }
  ]

  return (
    <div>
      <Head>
        <title>{game.title} | Completed Games</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <div className="mt-8">
        <div className="flex items-center justify-between" id="title">
          <p className="text-4xl font-bold tracking-wider text-gray-200">
            {game.title}
          </p>
          <RatingCircle rating={game.rating} />
        </div>
        <div className="flex items-center space-x-2" id="tags">
          {game.tags.map((tag) => (
            <div
              key={tag.toLowerCase()}
              className="px-2 py-1 text-sm bg-opacity-25 rounded-sm shadow-sm bg-sky-700 text-sky-400">
              {tag}
            </div>
          ))}
        </div>
        <div id="stats">
          <StatTable
            className="p-4 mt-8 text-xs bg-black bg-opacity-25 rounded-sm shadow-md md:w-2/3 2xl:w-1/3 md:text-base"
            rows={rows}
          />
        </div>
        {/* TODO: Render rich text */}
      </div>
    </div>
  )
}

export const getStaticProps: GetStaticProps<GamePageProps> = async ({
  params
}) => {
  if (!params?.slug || Array.isArray(params?.slug)) {
    return { notFound: true }
  }

  const game = await getGameBySlug(params.slug)

  if (!game) {
    return { notFound: true }
  }

  return { props: { game } }
}

export const getStaticPaths: GetStaticPaths = async () => {
  const allGames = await getAllGamesWithSlug()
  return {
    paths: allGames?.map(({ slug }) => `/game/${slug}`) ?? [],
    fallback: true
  }
}

export default GamePage
